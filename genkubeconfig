---
- name: Generate Kubernetes Service Account Kubeconfig
  hosts: localhost
  gather_facts: false

  vars:
    namespace: "default"
    service_account_name: "my-service-account"
    kubeconfig_path: "/tmp/kubeconfig-{{ service_account_name }}.yaml"
    kubernetes_api_url: "https://<your_kubernetes_api_server_ip_or_hostname>:<your_kubernetes_api_server_port>"
    kubernetes_cluster_name: "default" # Or your cluster name
    kube_admin_config: "~/.kube/config" # Path to your admin kubeconfig

  tasks:
    - name: Ensure kubeconfig directory exists
      ansible.builtin.file:
        path: "{{ kubeconfig_path | dirname }}"
        state: directory
        mode: '0755'

    - name: Get service account token
      kubernetes.core.k8s:
        api_version: v1
        kind: Secret
        name: "{{ (lookup('kubernetes.core.k8s', api_version='v1', kind='ServiceAccount', name=service_account_name, namespace=namespace, kubeconfig=kube_admin_config')).secrets[0].name }}"
        namespace: "{{ namespace }}"
        kubeconfig: "{{ kube_admin_config }}"
      register: service_account_secret

    - name: Set service account token fact
      ansible.builtin.set_fact:
        service_account_token: "{{ service_account_secret.resources[0].data.token | b64decode }}"
      when: service_account_secret.resources | length > 0 and service_account_secret.resources[0].data.token is defined

    - name: Get Kubernetes cluster CA certificate
      kubernetes.core.k8s:
        api_version: v1
        kind: ConfigMap
        name: kube-root-ca.crt
        namespace: kube-public
        kubeconfig: "{{ kube_admin_config }}"
      register: kube_ca_configmap
      ignore_errors: true # Might not always exist as a ConfigMap

    - name: Set Kubernetes cluster CA certificate fact from ConfigMap
      ansible.builtin.set_fact:
        kubernetes_ca_cert: "{{ kube_ca_configmap.resources[0].data['ca.crt'] | b64encode }}"
      when: kube_ca_configmap.resources | length > 0 and kube_ca_configmap.resources[0].data['ca.crt'] is defined

    - name: Get Kubernetes cluster CA certificate from API
      kubernetes.core.k8s:
        api_version: certificates.k8s.io/v1
        kind: ClusterCSIDriver
        name: csi.example.com # Replace with a known ClusterCSIDriver name in your cluster
        kubeconfig: "{{ kube_admin_config }}"
      register: csi_driver_info
      ignore_errors: true
      when: kubernetes_ca_cert is not defined # Only try if not found in ConfigMap

    - name: Set Kubernetes cluster CA certificate fact from API
      ansible.builtin.set_fact:
        kubernetes_ca_cert: "{{ csi_driver_info.resources[0].spec.volumeLifecycleModes[0] | b64encode if csi_driver_info.resources | length > 0 and csi_driver_info.resources[0].spec.volumeLifecycleModes is defined else '' }}"
      when: kubernetes_ca_cert is not defined

    - name: Generate kubeconfig content
      ansible.builtin.template:
        src: "templates/kubeconfig.j2"
        dest: "{{ kubeconfig_path }}"
        mode: '0600'
      vars:
        server: "{{ kubernetes_api_url }}"
        cluster_name: "{{ kubernetes_cluster_name }}"
        sa_name: "{{ service_account_name }}"
        token: "{{ service_account_token }}"
        ca_cert: "{{ kubernetes_ca_cert | default('') }}"
      when: service_account_token is defined

    - name: Print kubeconfig path
      ansible.builtin.debug:
        msg: "Kubeconfig file generated at: {{ kubeconfig_path }}"
      when: service_account_token is defined
